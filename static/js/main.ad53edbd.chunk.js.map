{"version":3,"sources":["components/MainNavigation/MainNavigation.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["MainNav","className","role","to","isActive","classNames","HomePage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","selectedPerson","people","name","sex","born","died","motherName","fatherName","slug","mother","find","p","father","isSelected","PeopleTable","map","PeoplePage","useState","setPeople","useParams","useEffect","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ad53edbd.chunk.js","sourcesContent":["import '../../App.scss';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'is-has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  selectedPerson: string,\n  people: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  selectedPerson,\n  people,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const mother = people.find((p) => p.name === motherName);\n  const father = people.find((p) => p.name === fatherName);\n\n  const isSelected = slug === selectedPerson;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <Link\n          to={`./${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {motherName\n          ? (\n            <>\n              {mother?.slug\n                ? (\n                  <Link\n                    to={`./${mother?.slug}`}\n                    className=\"has-text-danger\"\n                  >\n                    {motherName}\n                  </Link>\n                )\n                : <p>{motherName}</p>}\n            </>\n          )\n          : <p> - </p>}\n      </td>\n\n      <td>\n        {fatherName\n          ? (\n            <>\n              {father?.slug\n                ? (\n                  <Link\n                    to={`./${father?.slug}`}\n                  >\n                    {fatherName}\n                  </Link>\n                )\n                : <p>{fatherName}</p>}\n            </>\n          )\n          : <p> - </p>}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n// import { Loader } from \"../Loader\"\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedPerson: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedPerson }) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {/* <Loader />\n\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p> */}\n\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map((person) => (\n              <PersonLink\n                key={person.name}\n                person={person}\n                selectedPerson={selectedPerson}\n                people={people}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    getPeople().then(setPeople);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      {people.length\n        ? (\n          <PeopleTable\n            people={people}\n            selectedPerson={slug}\n          />\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { MainNav } from './components/MainNavigation';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n    <main className=\"section\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route\n          path=\"home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n        <Route\n          path=\"/people\"\n          element={<PeoplePage />}\n        >\n          <Route\n            path=\":slug\"\n            element={<PeoplePage />}\n          />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<h1 className=\"title\">Page not found</h1>}\n        />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}